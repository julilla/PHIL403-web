# -*- text -*-
#
# To generate the calendar: ./schedule.py > schedule.shtml
#
# This file follows a mostly self-documenting format for describing
# calendar data.  Any line that begins with # is a comment.  A line of
# the form "== Name ==" begins a new layer in the calendar.
#
# A line containing a date expression or a hyphen-separated date rate
# moves forward to the next date (or date range) that satisfies that
# expression.  Dates can be given in absolute form as "<Abbreviated
# month> <day>, <year>", in relative form as the name of a weekday, as
# the name of a layer (which represents all dates used by that layer)
# or as a named date definition.  These can be combined with "and",
# "or", "not", and parens in the expected way.  A line of the form
# "NAME = DATE-EXPR" defines a named date definition.

# A line that begins with "- " and any indented lines that follow it
# add items to the current date:
#
# - Holiday[: text]
# - Special[: text]
# - Lec: <text>
# - Rec: <text>
# - Tut: <text>
# - Prep [sections]: <text>
# - Due: <text>
# - Text [CSS class]: <text>
#
# <text> in any of these may be arbitrary HTML text, with the added
# convenience that the form "[href text...]" is converted to a
# hyperlink.
#
# Finally, {{raw}} directly emits raw html, after finishing the
# current calendary week (if there is one).

{{
<style>
table.calendar {
    font-family: arial, helvetica;
    font-size: 10pt;
    empty-cells: show;
    border: 1px solid #000000;
    border-collapse: collapse;
}
table.calendar tr td {
    border: 1px solid #aaaaaa;
}
table.calendar tr {
    vertical-align: top;
    height: 6em;
    background: #eeeeee;
}
table.calendar thead tr {
    text-align: center;
    background: #444444;
    color: #ffffff;
    height: auto;
    font-weight: bold;
}
.lecture {
    background: #ffffaa;
}
.recitation {
    background: #cccc99;
}
.tutorial {
    background: #dddd55;
}
.quiz {
    background: #ff9900;
}
.holiday {
    background: #ccffcc;
}
.special {
    background: #aaaaff;
}
.important {
    background: #ffaaaa;
}
.reading {
    color: #3333ff;
}
.deadline {
    color: #ff0000;
}
.assignment {
    color: #0aa00a;
}
.date {
    color: #444444;
}
.due {
    background: #ffaaaa;
}
</style>

<p>Please assume that the
material and schedule for future meetings may change.
If you are particularly interested in some topic not covered here,
send an email to <a href="https://julianetter.de">Julia</a>.</p>

<p>All the readings for the weeks ahead will be available on <a href="https://canvas.brown.edu/courses/1086488/files">Canvas</a>, unless they are available as an ebook from the library. In that case, there will be a link on the schedule. </p>

<div class="table-responsive">
<table class="table calendar" cellspacing="0" cellpadding="6" width="100%">
 <thead>
  <tr>
   <td width="24%">Monday</td><td width="14%">Tuesday</td>
   <td width="24%">Wednesday</td><td width="14%">Thursday</td>
   <td width="24%">Friday</td>
  </tr>
 </thead>
}}

##################################################################
# Calendar data
#

== Holidays ==

Feb 20, 2023
- Holiday: Presidents' Day
#TUELEC = .

Mar 25, 2023 - Mar 31, 2023
- Holiday: Spring Break

== Special ==

Jan 25, 2023
- Special: First day of classes

#Oct 1, 2022
#- Special: ADD DATE

#Oct 18, 2022
#- Special: <b class="deadline">DROP DATE</b>

May 9, 2023
- Special: Last day of classes

May 10, 2023 - May 19, 2023
- Text:  Exam period





##################################################################

== Lectures ==

LEC = (Mon or Wed or Fri) and not Holidays

# Skip opening convocation
#Thr

LEC
- Lec: Introduction
- Prep: 



##################################################################
== Assignments ==

Jan 30, 2023
- Assign: Short paper 1

Feb 24, 2023
- Due: Short paper 1


Mar 3, 2023
- Assign: Short paper 2

Mar 24, 2023
- Due: Short paper 2

Apr 7, 2023
- Due: Final paper proposal

May 8, 2023
- Due: Final project


##################################################################

{{
</table>
</div>

<script type="text/javascript">
var d = new Date();
for (var fwd = 0; fwd < 3; fwd++) {
  var i = d.getFullYear()+'-'+(d.getMonth()+1)+'-'+d.getDate();
  var e = document.getElementById(i);
  if (e) { e.style.border = '2px solid blue'; break; }
  d.setTime(d.getTime() + 24*60*60*1000);
}
</script>

<p></p>
}}
